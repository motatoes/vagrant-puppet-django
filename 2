# == Ensures that the user $user exists == #

package { ['libpq-dev','postgresql','postgresql-contrib']:
    ensure => latest,
    install_options => ['--allow-unauthenticated', '-f'],
}


# == add $user to the sudoers == #

class { 'sudo': }


user { '${user}': 
  ensure    => present,
  shell     => '/bin/bash',
  home      => '/home/${user}',
  password  => '$password',
  groups    => ['admin'],
}
 
# == vagrant user needs to be a sudoer == #

sudo::conf {'vagrant':
  ensure => present,
  content => 'vagrant ALL=(ALL) NOPASSWD:ALL',
}

sudo::conf { 'admins':
  ensure => present,
  content => '%admin ALL=(ALL) ALL',
}

# == Ensure that some directories exist == #

# Ensures that the $user home directory exits
file { '/home/${user}':
  ensure => 'directory',
  owner => '${user}'
}

file { '/home//virtualenvs':
  ensure => 'directory',
  owner => '$user'
}

file { '/home/$user/$project_name':
  ensure => 'directory',
  owner => '$user'
}

## Configuration for some scripts
# ensures that apache is installed on the machine
class { 'apache': }

apache::vhost { '$apache_vhost':
    port     => '80',
    docroot  => '/home/$user/CM_main' 
}

class { 'postgresql::server': }

postgresql::server::db { '$project_name':
    user => '$user',
    password => '$user'
}


class { 'python': 
    version     => 'system',
    pip         => true,
    dev         => true,
    virtualenv  => true,
}

python::virtualenv { '/home/$user/$project_name':
     ensure     => present,
     version    => 'system',
     systempkgs => true,
     distribute => false,
     venv_dir   => '/home/$user/virtualenvs/$project_name',
     owner      => '$user',
}

python::pip { 'django':
    pkgname => 'django',
    ensure => '1.8',
    virtualenv => '/home/$user/virtualenvs/$project_name'
}

# install psycopg2 to use postgresql database with django
python::pip { 'psycopg2':
   pkgname => 'psycopg2',
   ensure => latest,
   virtualenv => '/home/$user/virtualenvs/$project_name',
}


